{% set name = "hatchling" %}
{% set version = "1.8.0" %}
{% set build = "0" %}
{% set checksum = "a4f982fdca0717d8c46bfe7b501302f90aaf2a5302845d550b49c8739681feb2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/hatchling-{{ version }}.tar.gz
  sha256: {{ checksum }}

build:
  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed . -vv
  number: {{ build }}
  skip: True  # [py<37]
  entry_points:
    - hatchling = hatchling.cli:hatchling

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
    - pathspec
    - pluggy
    - packaging
  run:
    - python
    - editables >=0.3
    - packaging >=21.3
    - pathspec >=0.10.1
    - pluggy >=1.0.0
    - tomli >=1.2.2  # [py<311]

# Tests do not include upstream tests because they are only testing 'python -m pip install', which is already done
# in the build section. It's pretty much a useless integration test which would not work with how conda build
# sets up the test environment.
test:
  imports:
    - hatchling
  commands:
    - pip check
    - hatchling --help
  requires:
    - pip

about:
  home: https://hatch.pypa.io/latest/
  license: MIT
  license_file: LICENSE.txt
  license_family: MIT
  summary: Modern, extensible Python build backend
  description: |
    Modern, extensible Python build backend. Hatch utilizes pluggy for its plugin functionality. All plugins provide
    registration hooks that return one or more classes that inherit from a particular type interface. Each registration
    hook must be decorated by Hatch's hook marker.
  dev_url: https://github.com/pypa/hatch/tree/master/backend
  doc_url: https://hatch.pypa.io/latest/plugins/about/#hatchling

extra:
  recipe-maintainers:
    - ofek
